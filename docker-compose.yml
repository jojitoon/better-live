version: '3.8'

services:
  api:
    build:
      context: ./better-api
      dockerfile: Dockerfile
    container_name: better-api
    ports:
      - '3000:3000'
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/better_api_development
      - REDIS_URL=redis://redis:6379/0
      - REDIS_URL_SIDEKIQ=redis://redis:6379/1
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=better_api_development
    depends_on:
      db:
        condition: service_healthy
    #for production
    # command: sh -c "bundle exec rails db:migrate && ./bin/thrust ./bin/rails server"
    #for development
    command: sh -c "bundle exec rails db:migrate && bundle exec rails server -p 3000 -b '0.0.0.0'"

    volumes:
      - gem_cache:/gems

    networks:
      - better-network
    restart: unless-stopped

  live-api:
    build:
      context: ./better-live-api
      dockerfile: Dockerfile
    container_name: better-live-api
    ports:
      - '3001:3000'
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - api
      - redis
    networks:
      - better-network
    restart: unless-stopped

  web:
    build:
      context: ./better-live-web
      dockerfile: Dockerfile
    container_name: better-live-web
    ports:
      - '80:80'
    environment:
      - VITE_API_URL=http://localhost:3000
      - VITE_LIVE_API_URL=http://localhost:3001
    depends_on:
      - api
      - live-api
    networks:
      - better-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: better_api_development
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=better_api_development
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - better-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  sidekiq:
    depends_on:
      - 'db'
      - 'redis'
    build:
      context: ./better-api
      dockerfile: Dockerfile
    command: bundle exec sidekiq
    volumes:
      - /var/lib/redis/data
      - gem_cache:/gems
    environment:
      - REDIS_URL_SIDEKIQ=redis://localhost:6379/1

  redis:
    image: redis:7-alpine
    container_name: better-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    networks:
      - better-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  gem_cache:

networks:
  better-network:
    driver: bridge
